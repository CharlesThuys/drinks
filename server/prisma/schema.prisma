// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String          @id @default(auto()) @map("_id") @db.ObjectId
  name            String          @unique
  password        String
  profile_picture String
  events          Event[]
  eventMessages   EventMessage[]
  games           Game[]
  Invitations     Invitation[]
  gamelikes       UserLikesGame[]
}

model Event {
  id          String         @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  picture     String
  date        DateTime
  location    String
  user        User           @relation(fields: [userId], references: [id])
  userId      String         @db.ObjectId
  pulic       Boolean        @default(true)
  messages    EventMessage[]
  Invitations Invitation[]
}

model EventMessage {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  text      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   String   @db.ObjectId
  createdAt DateTime @default(now())
}

model Game {
  id          String          @id @default(auto()) @map("_id") @db.ObjectId
  name        String          @unique
  description String
  funFactor   Int
  drinkFactor Int
  materials   String[]
  user        User            @relation(fields: [userId], references: [id])
  userId      String          @db.ObjectId
  likes       UserLikesGame[]
}

model Invitation {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  event    Event   @relation(fields: [eventId], references: [id])
  eventId  String  @db.ObjectId
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @db.ObjectId
  accepted Boolean

  @@unique([eventId, userId], name: "uniqueEventUser")
}

model UserLikesGame {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String   @db.ObjectId
  liked     Boolean  @default(true)
  createdAt DateTime @default(now())

  @@unique([userId, gameId], name: "uniqueUserGame")
}
